#include <WiFi.h>

const char *ssid = "ESP_658E10";


//Set static IP for the client
IPAddress localIP(192, 168, 4, 2);
IPAddress gateway(192, 168, 4, 1);
IPAddress subnet(255, 255, 255, 0);

IPAddress serverIP(192, 168, 4, 1); //Host's IP
const int serverPort = 80;

WiFiClient client;

void setup() {
    Serial.begin(115200);
    Serial.println("🚀 Starting Client...");

    //Ensure clean WiFi start
    WiFi.disconnect();
    delay(1000);

    Serial.println("🌐 Connecting to Wi-Fi...");
    WiFi.config(localIP, gateway, subnet);  //Assign static IP
    WiFi.begin(ssid); //

    int attempts = 0;
    while (WiFi.status() != WL_CONNECTED && attempts < 15) { //Retry up to 15 times
        delay(1000);
        Serial.print("⏳ Connecting... Attempt ");
        Serial.println(attempts + 1);
        attempts++;
    }

    if (WiFi.status() == WL_CONNECTED) {
        Serial.println("✅ Connected to Wi-Fi!");
        Serial.print("📡 Client IP Address: ");
        Serial.println(WiFi.localIP());
    } else {
        Serial.println("❌ ERROR: Failed to connect to Wi-Fi.");
        while (true);
    }
}

void loop() {
    Serial.println("🔄 Attempting to connect to server...");

    if (client.connect(serverIP, serverPort)) {
        Serial.println("✅ Connected to server!");

        //Send message
        client.println("Hello from Client");
        Serial.println("📤 Message sent");

        //Wait for response from host
        unsigned long timeout = millis();
        while (client.connected() && millis() - timeout < 5000) { //Timeout after 5 seconds
            if (client.available()) {
                String response = client.readStringUntil('\n');
                Serial.print("📩 Server response: ");
                Serial.println(response);
                break;
            }
        }

        //client.stop();
        //Serial.println("🔌 Disconnected from server.");
    } else {
        Serial.println("⚠️ Failed to connect to server.");
    }

    delay(5000);
}
